- hosts: ["localhost"]
  become: true
  # become_pass: <PASSWORD> # Else ansible.legacy.setup error
  tasks:
  - name: Install shell utilities w/ apt
    apt:
      state: latest
      name:
        - zsh
  - name: Ensure the user has a zsh shell.
    user:
      name: "{{ ansible_user }}"
      shell: /usr/bin/zsh
      state: present
  - name: Download default .zshrc
    ansible.builtin.get_url:
      url: https://gist.githubusercontent.com/kpbeta/39cc785da0898096f2e3d38b2c344359/raw/e856dd98e24427ba0d48729ac17a03ad23456021/default-zshrc
      dest: $HOME/.zshrc
      mode: '0440'

  - name: Install shell utilities w/ apt
    apt:
      state: latest
      name:
        - tmux
        - xclip
        - xcape
        - openssh-server
  - name: Install other utilities (wget, curl, git, etc.)
    apt:
      state: latest
      name:
        - python3
        - python2
        - curl
        - wget
        - git
        - bat
  - name: Install require packages like gcc, make, cmake, etc
    apt:
      state: latest
      name: 
        - gcc
        - g++
        - make
        - cmake 
        # others at https://deepu.tech/rust-terminal-tools-linux-mac-windows-fish-zsh/
# - name: Install linux cargo packages
#   community.general.cargo:
#     name:
#     - exa # ls alternative (also lsd)
#     - zoxide # z (alternative to cd)
#     - ripgrep
#     - fd-find # alternative to find
  - name: Set environment managers (direnv, npm, conda)
    apt:
      state: latest
      name:
        - direnv
  - name: Install NVM
    ansible.builtin.shell: >
      curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
    args:
      creates: "{{ ansible_env.HOME }}/.nvm/nvm.sh"
    # shell:
    #   cmd: curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
  
  - name: Install utilities (htop, tree, pstree, etc.)
    apt:
      state: latest
      name:
        - htop
        - tree
        - net-tools
        - psmisc
        - trash-cli
        - gnome-sushi
  - name: Install VM techs
    apt:
      state: latest
      name:
        - vagrant
        - docker.io


  ######### RUST SETUP
  - name: Install Rust
  # Savior: https://dentrassi.de/2020/06/17/headless-installation-of-cargo-and-rust/
    shell:
      cmd: which rustc; [[ ! $? -eq 0 ]] && curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
  - name: Softlink Cargo
    ansible.builtin.file:
      src: /usr/lib/cargo
      dest: /usr/bin/cargo
      owner: root
      group: root
      state: link

  ########## TAILSCALE
  - name: Install tailscale
    shell: 
      cmd: which tailscale; [[ ! $? -eq 0 ]] &&  curl -fsSL https://tailscale.com/install.sh | sh
  - name: Install editor, markdown tools, etc. (pandoc, lynx, etc.)
    apt:
      state: latest
      name:
        - vim
        - pandoc
        - lynx

  - name: Creates directory
    become_user: "{{ansible_user}}"
    become: true
    file:
      path: $HOME/MyApplications/bin # MyApplications is created automatically
      state: directory
      owner: "{{ansible_user}}"
      group: "{{ansible_user}}"
      mode: 0775
  # - name: Clone git repos
  #   git:
  #     repo: https://github.com/romkatv/powerlevel10k.git 
  #     dest: ${ZSH_CUSTOM}/themes/powerlevel10k
  #     clone: yes
  #     update: yes
  #     depth: 1

  
  - name: Install snap modules
    snap:
      name:
        - bitwarden
        - spotify
        
  - name: Install Surfshark
    shell:
      cmd: |
        which surfshark; [[ ! $? -eq 0 ]] && \
        curl -f https://downloads.surfshark.com/linux/debian-install.sh --output /tmp/surfshark-install.sh && \
        sh /tmp/surfshark-install.sh

  - name: Generate SSH key id_rsa_main
    become_user: "{{ansible_user}}"
    openssh_keypair:
      path: "$HOME/.ssh/id_rsa_main"
      type: rsa
      size: 4096
      state: present
      force: no

  - name: Set git global configs
    shell:
      cmd: git config --global user.name "Kalyan Parajuli"; git config --global user.email "kalyanranjanp@gmail.com"; git config --global core.editor vim; git --global config pull.rebase false; git config --global push.autoSetupRemote true
