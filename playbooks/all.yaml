# ansible-playbook -i ../inventory.ini ./all.yaml
- hosts: ["linux_localhost"]
  become: true
  # become_pass: <PASSWORD> # Else ansible.legacy.setup error
  tasks:
  
  #########################################################################
  # SHELL AND UTILITIES                                                   #
  #########################################################################
    - name: Install shell utilities w/ apt
      apt:
        state: latest
        name:
          - zsh

    - name: Ensure the user has a zsh shell.
      user:
        name: "{{ ansible_user }}"
        shell: /usr/bin/zsh
        state: present

    - name: Download default .zshrc
      ansible.builtin.get_url:
        url: https://gist.githubusercontent.com/kpbeta/39cc785da0898096f2e3d38b2c344359/raw/e856dd98e24427ba0d48729ac17a03ad23456021/default-zshrc
        dest: $HOME/.zshrc
        mode: '0440'

    - name: Install different utilities
      apt:
        state: latest
        name:
          - tmux
          - xclip
          - xcape
          - openssh-server
          - python3 
          - python2
          - curl    # REQUIRED UTILITIES
          - wget
          - git
          - gzip
          - gcc     # LIBRARIES
          - g++
          - make
          - cmake 
          - libfontconfig
          - libfontconfig1-dev
          - pkg-config
          - libfreetype6-dev
          - libxcb-xfixes0-dev
          - libxkbcommon-dev
          - htop     # DIFFERENT OPTIONAL UTILS
          - tree
          - net-tools
          - psmisc
          - trash-cli
          - gnome-sushi   # EDITORS and Markups
          - vim
          - gedit
          - pandoc
          - lynx
          - gzip
          - pm-utils     # hibernation
    - name: Install snap modules
      snap:
        name:
          - bitwarden
          - spotify
          - signal-desktop

#########################################################################
# ENVIRONMENT MANAGER                                                   #
#########################################################################
    - name: Set environment managers
      block:    
        - name: Set environment managers (direnv, npm, conda)
          apt:
            state: latest
            name:
              - direnv
            
        - name: Install NVM
          ansible.builtin.shell: >
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
          args:
            creates: "{{ ansible_env.HOME }}/.nvm/nvm.sh"

#########################################################################
# RUST SETUP AND UTILS                                                  #
#########################################################################
    # Savior: https://dentrassi.de/2020/06/17/headless-installation-of-cargo-and-rust/
    - name: Rust, cargo and cargo packages
      block:
        - name: Install Rust
          shell:
            cmd: |
              which rustc;
              if [[ $? -ne 0 ]]
              then curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
              fi

        - name: Softlink Cargo # else cargo utils will not work through ansible
          ansible.builtin.file:
            src: "{{ ansible_home }}/.cargo/bin/cargo"
            dest: /usr/bin/cargo
            owner: root
            group: root
            state: link

        # https://gist.github.com/sts10/daadbc2f403bdffad1b6d33aff016c0a?permalink_comment_id=4084731
        # https://jvns.ca/blog/2022/04/12/a-list-of-new-ish--command-line-tools/
        # https://deepu.tech/rust-terminal-tools-linux-mac-windows-fish-zsh/
        - name: Install cargo packages
          become: true
          become_user: "{{ ansible_user }}"
          shell:
            cmd: |
              {{ ansible_home }}/.cargo/bin/rustup update && 
              {{ ansible_home }}/.cargo/bin/cargo install \
              ripgrep exa bat du-dust tealdeer zoxide fd-find xcp \
              sd procs bottom broot bandwhich cargo-deb zellij

#########################################################################
# Install Vagrant, docker                                               #
#########################################################################
    - name: Install VM techs
      apt:
        state: latest
        name:
          - vagrant
          - docker.io

#########################################################################
# Install alacritty                                                     #
#########################################################################
    - name: Install Alacritty
      block:
        - name: Clone alacritty
          become: true
          become_user: "{{ ansible_user }}"
          ansible.builtin.git:
            repo: https://github.com/alacritty/alacritty.git
            dest: "{{ ansible_home }}/MyApplications/alacritty"
            clone: yes
            update: yes
            depth: 1
          environment:
            GIT_TERMINAL_PROMPT: 0

        - name: Run alacritty build
          become: true
          become_user: "{{ ansible_user }}"
          shell:
            cmd: |
              {{ ansible_home }}/.cargo/bin/rustup override set stable;
              {{ ansible_home }}/.cargo/bin/rustup update stable;
              cd "{{ ansible_home }}/MyApplications/alacritty";
              {{ ansible_home }}/.cargo/bin/cargo build --release;

        - name: Add desktop entry for Alacritty
          shell:
            cmd: |
              cd "{{ ansible_home }}/MyApplications/alacritty";
              cp target/release/alacritty /usr/local/bin;
              cp extra/logo/alacritty-term.svg /usr/share/pixmaps/Alacritty.svg;
              desktop-file-install extra/linux/Alacritty.desktop;
              update-desktop-database;

        - name: Install manpages
          shell:
            cmd: |
              mkdir -p /usr/local/share/man/man1;
              cd "{{ ansible_home }}/MyApplications/alacritty";
              gzip -c extra/alacritty.man | tee /usr/local/share/man/man1/alacritty.1.gz > /dev/null;
              gzip -c extra/alacritty-msg.man | tee /usr/local/share/man/man1/alacritty-msg.1.gz > /dev/null;

        - name: Install ZSH completions
          become: true
          become_user: "{{ ansible_user }}"
          shell:
            cmd: |
              cd "{{ ansible_home }}/MyApplications/alacritty";
              mkdir -p ${ZDOTDIR:-~}/.zsh_functions;
              echo 'fpath+=${ZDOTDIR:-~}/.zsh_functions' >> ${ZDOTDIR:-~}/.zshrc;
              cp extra/completions/_alacritty ${ZDOTDIR:-~}/.zsh_functions/_alacritty

        - name: Install BASH completions
          become: true
          become_user: "{{ ansible_user }}"
          shell:
            cmd: |
              cd "{{ ansible_home }}/MyApplications/alacritty";
              mkdir -p ~/.bash_completion;
              cp extra/completions/alacritty.bash ~/.bash_completion/alacritty;
              echo "source ~/.bash_completion/alacritty" >> ~/.bashrc;

#########################################################################
# Install copyq from apt repository                                  #
#########################################################################
    - name: Install copyq for clipboard support
      block:
        - name: Add copyq repository
          apt_repository:
            repo: ppa:hluk/copyq
            state: present

        - name: Install copyq
          apt:
            state: latest
            name: copyq

#########################################################################
# Install obs-studio                                                   #
#########################################################################
    - name: Install obs-studio
      block:
        - name: Add obs-studio repo
          apt_repository:
            repo:  ppa:obsproject/obs-studio
            state: present
        - name: Install obs-studio
          apt:
            state: latest
            name:
              - ffmpeg
              - obs-studio

#########################################################################
# Install Package with curl  (Surfshark, tailscale)                     #
#########################################################################                 
    - name: Install Surfshark
      shell:
        cmd: |
          which surfshark;
          if [[ $? -ne 0 ]] 
          then 
          curl -f https://downloads.surfshark.com/linux/debian-install.sh \
          --output /tmp/surfshark-install.sh && sh /tmp/surfshark-install.sh
          fi

    - name: Install tailscale
      shell: 
        cmd: |
          which tailscale; 
          if [[ ! $? -eq 0 ]]
          then curl -fsSL https://tailscale.com/install.sh | sh
          fi

###################################################
# SSH and GIT CONFIGURATIONS                      #
###################################################
    - name: Generate SSH keys
      block:
      - name: Generate SSH key id_rsa_main
        become_user: "{{ansible_user}}"
        openssh_keypair:
          path: "$HOME/.ssh/id_rsa_main"
          type: rsa
          size: 4096
          state: present
          force: no

      - name: Generate SSH key id_ecdsa_github
        become_user: "{{ansible_user}}"
        openssh_keypair:
          path: "$HOME/.ssh/id_ecdsa_github"
          type: ecdsa
          size: 521
          state: present
          force: no

    - name: Set git global configs
      shell:
        cmd: |
          git config --global user.name "Kalyan Parajuli";
          git config --global user.email "kalyanranjanp@gmail.com";
          git config --global core.editor vim;
          git --global config pull.rebase false;
          git config --global push.autoSetupRemote true;

###################################################
# INSTALL miniconda3                              #
###################################################
    - name: Install miniconda3
      become: true
      become_user: "{{ ansible_user }}"
      block:
        - name: Get miniconda
          ansible.builtin.get_url:
            url: https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
            dest: /tmp/miniconda.sh
            mode: 0755

        - name: Silent install of miniconda
          ansible.builtin.command:
            chdir: /tmp
            cmd: ./miniconda.sh -b -u -p $HOME/MyApplications/miniconda3

    - name: Add miniconda bin to path
      become: True
      shell: echo 'export PATH=$HOME/MyApplications/miniconda3/bin:$PATH' >> /etc/profile


###################################################
# INSTALL zprezto                                 #
###################################################
    - name: Install zprezto
      become: true
      become_user: "{{ ansible_user }}"
      block:
      - name: Check if zprezto exists
        register: zprezto_exists
        stat: 
          path: "{{ ansible_home }}/.zprezto"      
      
      - name: Install zprezto
        when: zprezto_exists.stat.exists == False
        become: true
        become_user: "{{ ansible_user }}"
        ansible.builtin.git:
          repo: https://github.com/sorin-ionescu/prezto.git
          dest: "{{ ansible_home }}/.zprezto"
          clone: yes
          update: yes
          recursive: true
          track_submodules: true
          force: yes

###################################################
# INSTALL nvim              #
###################################################




###################################################
# SAMPLES ##
##################################################
# #     # - name: Install Cargo packages and utilities
# #     #   community.general.cargo:
# #     #     name: 
# #     #       - alacritty
# #     #       - ripgrep   # others ag, ack  $rg
# #     #       - exa       # lsd             $exa
# #     #       - bat       # cat alterative  $bat
# #     #       - du-dust      # du alternative $dust
# #     #       - tealdeer  # tldr alternative (community manpages) $tldr
# #     #       - zoxide    # cd alternative    $zoxide
# #     #       - fd-find   # find alternative  $fd
# #     #       - xcp       # cp alternative    $xcp
# #     #       - sd        # sed and awk alternative
# #     #       - procs     # ps alternative
# #     #       - bottom    # top alternative   $btm
# #     #       - broot     # tree alternative  $br
# #     #       - bandwhich # Connection monitoring   $bandwhich






# #   # block:
# #   #   - name: Install 
# #   #     shell:
# #   #       cmd: |
# #   #         git clone https://github.com/alacritty/alacritty.git \
# #   #         "{{ansible_home}}/MyApplications/bin/alacritty";

# # - name: Creates directory
# #   become_user: "{{ansible_user}}"
# #   become: true
# #   file:
# #     path: $HOME/MyApplications/bin # MyApplications is created automatically
# #     state: directory
# #     owner: "{{ansible_user}}"
# #     group: "{{ansible_user}}"
# #     mode: 0775

# # # - name: Clone git repos
# # #   git:
# # #     repo: https://github.com/romkatv/powerlevel10k.git 
# # #     dest: ${ZSH_CUSTOM}/themes/powerlevel10k
# # #     clone: yes
# # #     update: yes
# # #     depth: 1
